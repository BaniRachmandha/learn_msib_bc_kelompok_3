const _path = require("path");
const {_u,_n,_t,_f}       = require("nv-facutil-untf");
const {stat,_get_children_with_stat} = require("nv-file-sync-basic");


const _walk_without_resolve = (
     p,pdata,
     rslt_filter,   rslt_fmter,
     visit_filter,
     arr
) => {
     let children = _get_children_with_stat(p,pdata["#stat"]);
     for(let child of children) {
          let cdata = stat(child);
	  let should_push = rslt_filter(cdata);
	  if(should_push) {arr.push(rslt_fmter(cdata))} else {}
	  if(cdata.type === "dir") {
              let should_visit = visit_filter(cdata);
	      if(should_visit) {
	           _walk_without_resolve(child,cdata,rslt_filter,   rslt_fmter,visit_filter,arr);
	      } else {
	      }
	  } else {
	  
	  }
     }
}

const walk   = (
    p="./",
    rslt_filter  = (stat)=>_t,
    rslt_fmter   = (stat)=>stat,
    visit_filter = (stat)=>_t,
) => {
    p    = _path.resolve(p);
    let data = stat(p);
    let arr  = [];
    if(rslt_filter(data)) {arr.push(rslt_fmter(data))}
    if(data.type === 'dir') {
	if(visit_filter(data)) {
	  _walk_without_resolve(
	    p,data,
	    rslt_filter, rslt_fmter,
	    visit_filter,
	    arr
	  );
	} else {
	}
	return(arr)
    } else {
        return(arr)
    }
}

const find_all_js_ts_json = (p="./") => walk(
    p,
   (stat)=>(stat.ext===".ts" || stat.ext===".js" || stat.ext===".mjs"|| stat.ext===".json"),
   (stat)=>stat.path,    
   (stat)=>_t
);

const find_all_js_ts_json_exclude_package_json = (p="./") => walk(
    p,
   (stat)=>(
        stat.ext===".ts" || 
	stat.ext===".js" || 
	stat.ext===".mjs"|| 
        (
	    stat.ext===".json" && 
	    !(stat.base.endsWith("package-lock.json")) && 
	    !(stat.base.endsWith("package.json"))
	)
   ),
   (stat)=>stat.path,
   (stat)=>_t
)

const find_all_js_ts_json_exclude_pkg$mcr$blk = (p="./") => walk(
    p,
   (stat)=>(
	(
	    (	
                (stat.ext===".ts" || stat.ext===".js" || stat.ext===".mjs") && 
		!(stat.base.endsWith("nvmcr.js")) && 
		!(stat.base.endsWith("nvblk.js")) && 
		!(stat.base.endsWith("nvblc.js")) 
	    ) ||
            (
                stat.ext===".json" &&
                !(stat.base.endsWith("package-lock.json")) &&
                !(stat.base.endsWith("package.json"))
            )
	)
   ),
   (stat)=>stat.path,
   (stat)=>_t
);

module.exports = {
   walk,
   find_all_js_ts_json,
   find_all_js_ts_json_exclude_package_json,
   find_all_js_ts_json_exclude_pkg$mcr$blk,
}
